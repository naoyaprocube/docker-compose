version: '2.0'

networks:
  guacnetwork_compose:
    driver: bridge

volumes:
  drives:
  recordings:
  db:
services:

  # Guacamole server
  guacd:
    build: .
    container_name: guacd_compose
    image: guacamole/guacd
    networks:
      guacnetwork_compose:
    restart: always
    volumes:
    - drives:/var/lib/guacamole/drives:rw
    - recordings:/var/lib/guacamole/recordings:rw

  # Guacamole Database
  postgres:
    container_name: postgres_guacamole_compose
    environment:
      PGDATA: /var/lib/postgresql/data/guacamole
      POSTGRES_DB: guacamole_db
      POSTGRES_PASSWORD: 'ChooseYourOwnPasswordHere1234'
      POSTGRES_USER: guacamole_user
    image: postgres:15.2-alpine
    networks:
      guacnetwork_compose:
    restart: always
    volumes:
    - ./init:/docker-entrypoint-initdb.d:z
    -  db:/var/lib/postgresql/data:Z

  # Web UI
  guacamole:
    container_name: guacamole_compose
    depends_on:
    - guacd
    - postgres
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_HOSTNAME: postgres
      POSTGRES_PASSWORD: 'ChooseYourOwnPasswordHere1234'
      POSTGRES_USER: guacamole_user
      GUACAMOLE_HOME: /opt/guacamole/
    image: guacamole/guacamole
    links:
    - guacd
    networks:
      guacnetwork_compose:
    restart: always
    volumes:
    - ./extensions:/opt/guacamole/extensions
    - drives:/var/lib/guacamole/drives:rw
    - recordings:/var/lib/guacamole/recordings:rw

  # Reverse Proxy
  nginx:
    container_name: nginx_guacamole_compose
    restart: always
    image: nginx
    volumes:
    - ./nginx/templates:/etc/nginx/templates:ro
    - ./nginx/ssl/self.cert:/etc/nginx/ssl/self.cert:ro
    - ./nginx/ssl/self-ssl.key:/etc/nginx/ssl/self-ssl.key:ro
    ports:
    - 443:443
    links:
    - guacamole
    - fileserver
    networks:
      guacnetwork_compose:
  
  #chrome
  chrome:
    image: siomiz/chrome:latest
    networks:
      guacnetwork_compose:

  #mongoDB  
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: files_db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    volumes:
      - ./db:/data/db
      - ./configdb:/data/configdb
    networks:
      guacnetwork_compose:
  
  #fileserver
  fileserver:
    container_name: fileserver
    build: ./file-server-component
    links:
    - mongo
    ports: 
    - '3000:3000'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      guacnetwork_compose:

  # Recording movie converter
  # guacenc:
  #   container_name: guacenc
  #   restart: always
  #   image: bytepen/guacenc:latest
  #   volumes:
  #   - recordings:/record:rw

